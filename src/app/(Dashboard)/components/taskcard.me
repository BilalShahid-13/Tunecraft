"use client";
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle
} from "@/components/ui/card"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { musicPlans } from "@/lib/Constant";
import useSidebarWidth from "@/store/sidebarWidth";
import useTasks from "@/store/tasks";
import axios from "axios";
import { Clock, Loader2, MoveRight } from 'lucide-react'
import React, { useEffect, useState } from "react"

export default function TaskCard({
  badge = 'New',
  title = 'Birthday Song',
  des = 'i want song like o repiya sung by rahet',
  plan, item, session,
  time = '3hr', bgStory, currentStage, songGenre
}) {
  const [userPlan, setUserPlan] = useState({ title: '', price: 0 })
  const [dialogOpen, setDialogOpen] = useState(false)
  const [isLoading, setIsLoading] = useState(false)
  const { width } = useSidebarWidth();
  const { addActiveTasks, setFetchedTasks } = useTasks()

  useEffect(() => {
    if (plan) {
      console.log(plan)
      const musicPlan = musicPlans.find(item => item.plan === plan.name)
      console.log(musicPlan[currentStage])
      if (musicPlan) {
        setUserPlan({ price: musicPlan[currentStage], title: musicPlan.plan })
      }
    }
  }, [plan])


  const startWorking = async (item) => {
    console.log(item._id)
    setIsLoading(true)
    try {
      const res = await axios.patch('/api/startWorking', {
        orderId: item._id,
        role: session.user.role,
        userId: session.user.id
      })
      if (res.statusText === 'OK') {
        console.log('order started successfully', res)
        addActiveTasks(res.data.order)
        setDialogOpen(false)
      }
    } catch (error) {
      console.error(error);
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <>
      <Card className={`${width ? 'w-[320px] max-xl:w-[320px]' : 'w-[350px] max-xl:w-[330px]'} font-inter max-xs:w-full max-sm:w-full`}>
        <CardHeader className={'flex flex-row justify-between items-center'}>
          <div>
            <CardTitle>{title}</CardTitle>
          </div>
          <Badge className={`${badge === 'New' ? 'bg-[#0E8FD5]' : 'bg-[#4d2c28]'} text-white`}>{badge}</Badge>
        </CardHeader>
        <CardContent className={'font-light text-zinc-600 text-sm'}>
          {des}
        </CardContent>
        <CardFooter className={'flex flex-row  justify-between items-center'}>
          <div className='text-zinc-400 text-sm flex items-center gap-2'>
            <Clock size={14} />
            <p className='font-inter'>{time}</p>
          </div>
          <div className='text-zinc-400 text-sm flex items-center gap-2'>
            <h2 className='font-semibold font-inter'>MX$</h2>
            <p className='font-inter'>{userPlan.price}</p>
          </div>
          <div className={` text-sm
          flex items-center gap-2
          ${badge === 'New' ? 'text-[#0E8FD5]/70' : 'text-red-400'}`}>
            <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>
              <DialogTrigger className={'cursor-pointer max-sm:text-xs flex justify-center items-center gap-2'}>  <p>View Details</p>
                <MoveRight className="max-sm:text-xs max-sm:scale-x-75" /></DialogTrigger>
              <DialogContent>
                <DialogHeader>
                  <DialogTitle>{title}</DialogTitle>
                  <DialogDescription className={'flex flex-col gap-2'}>
                    <span className="flex flex-row gap-2 font-inter justify-between items-center w-full">
                      <span className="font-medium">{songGenre}</span>
                      <span className="flex flex-col gap-2 justify-end items-center">
                        <span className="text-primary text-sm font-semibold">{userPlan.title}</span>
                        <span><span className="font-semibold">MX$</span> {userPlan.price}</span>
                      </span>
                    </span>
                    <span className="font-semibold"> Description</span>
                    <span className="font-inter capitalize">{des}</span>
                    <span className="font-semibold"> User Comments</span>
                    <span className="font-inter capitalize">{bgStory}</span>
                    {/* {`${index}`} */}
                  </DialogDescription>
                </DialogHeader>
                <DialogFooter>
                  <Button className={'text-white cursor-pointer'}
                    onClick={() => startWorking(item)} disabled={isLoading}>
                    {isLoading ? <React.Fragment>
                      <Loader2 className="animate-spin" />
                      Loading
                    </React.Fragment> : 'Start Working'}
                  </Button>
                </DialogFooter>
              </DialogContent>
            </Dialog>
          </div>
        </CardFooter>
      </Card>
    </>
  )
}
