  const getNotificationCount = async () => {
    try {
      const notifcations = await axios.get('/api/notification/getAllPending')
      if (notifcations.statusText === 'OK') {
        setApprovalNotifications(notifcations.data.data)
        const data = notifcations.data.data;
        const newNotifications = data.map((items) => (
          {
            orderName: items.musicTemplate,
            submittedAtTime: items.submittedAtTime,
            createdAt: items.updatedAt,
            approvalStatus: items.approvalStatus,
            status: "Crafter Registration",
            crafterId: items?.crafterId,
            _id: items._id,
            username: items.username,
            role: items.role,
          }
        ))
        addNotifications(newNotifications)
      }
    } catch (error) {
      console.error('Error fetching notifications:', error);

    }
  }




    const fetchAllCrafterTasks = async () => {
    try {
      const res = await axios.get('/api/admin/get-all-Crafters')
      console.log('all-users', res.data.data)
      const allCrafters = res.data.data;
      const newNotifications = allCrafters.map((items) => (
        {
          orderName: items.musicTemplate,
          createdAt: items?.matchedCrafters[0]?.submittedAtTime,
          updatedAt: items?.updatedAt,
          approvalStatus: _crafterStatus(items?.matchedCrafters[0].submissionStatus).label,
          status: "Task Submission",
          orderId: items?.orderId,
          _id: items?.matchedCrafters[0].assignedCrafterId._id,
          username: items?.name,
          role: items?.matchedCrafters[0].assignedCrafterId.role,
        }
      ))
      addNotifications(newNotifications);
      addAllUser({ users: res.data.data, mode: "task", task: res.data.data });

      if (res.status === 200) {
        setIsUpdateTask(false);
      }
    } catch (error) {
      console.error(error.response.data);
    }
  }